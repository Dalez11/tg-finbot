import os
import requests
import random
import asyncio
from telegram import Bot

# === –ë–ï–†–Å–ú –ö–õ–Æ–ß–ò –ò–ó –ü–ï–†–ï–ú–ï–ù–ù–´–• –û–ö–†–£–ñ–ï–ù–ò–Ø ===
OPENROUTER_API_KEY = os.environ.get("OPENROUTER_API_KEY")
TG_BOT_TOKEN = os.environ.get("TG_BOT_TOKEN")
TG_CHANNEL = "@fin_geniuss"

bot = Bot(token=TG_BOT_TOKEN)

IMAGES = [
    "https://picsum.photos/800/600?random=1",
    "https://picsum.photos/800/600?random=2",
    "https://picsum.photos/800/600?random=3",
    "https://picsum.photos/800/600?random=4",
    "https://picsum.photos/800/600?random=5"
]

def generate_title():
    url = "https://openrouter.ai/api/v1/chat/completions"
    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "Content-Type": "application/json",
        "HTTP-Referer": "https://yourdomain.com",
        "X-Title": "TG Bot"
    }
    payload = {
        "model": "openai/gpt-3.5-turbo-16k",
        "messages": [
            {"role": "system", "content": "–¢—ã —ç–∫—Å–ø–µ—Ä—Ç –≤ –º–∞—Ä–∫–µ—Ç–∏–Ω–≥–µ –∏ –∫–æ–ø–∏—Ä–∞–π—Ç–∏–Ω–≥–µ."},
            {"role": "user", "content": "–ü—Ä–∏–¥—É–º–∞–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –∑–∞–≥–æ–ª–æ–≤–æ–∫ –¥–ª—è –∫–æ—Ä–æ—Ç–∫–æ–π —Å—Ç–∞—Ç—å–∏ –Ω–∞ —Ç–µ–º—É –ª–∏—á–Ω—ã—Ö —Ñ–∏–Ω–∞–Ω—Å–æ–≤, –∏–Ω–≤–µ—Å—Ç–∏—Ü–∏–π –∏–ª–∏ –º—ã—à–ª–µ–Ω–∏—è –±–æ–≥–∞—Ç—ã—Ö. –ù–µ –ø–æ–≤—Ç–æ—Ä—è–π—Å—è. –ö–æ—Ä–æ—Ç–∫–æ –∏ —Ü–µ–ø–ª—è—é—â–µ."}
        ],
        "temperature": 0.9
    }

    try:
        response = requests.post(url, headers=headers, json=payload)
        response.raise_for_status()
        return response.json()["choices"][0]["message"]["content"].strip().strip('"')
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∑–∞–≥–æ–ª–æ–≤–∫–∞:", e)
        return "–§–∏–Ω–∞–Ω—Å–æ–≤–∞—è –≥—Ä–∞–º–æ—Ç–Ω–æ—Å—Ç—å: —Å —á–µ–≥–æ –Ω–∞—á–∞—Ç—å"

def generate_article(title):
    url = "https://openrouter.ai/api/v1/chat/completions"
    headers = {
        "Authorization": f"Bearer {OPENROUTER_API_KEY}",
        "Content-Type": "application/json",
        "HTTP-Referer": "https://yourdomain.com",
        "X-Title": "TG Bot"
    }
    payload = {
        "model": "openai/gpt-3.5-turbo-16k",
        "messages": [
            {"role": "system", "content": "–¢—ã –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∫–æ–ø–∏—Ä–∞–π—Ç–µ—Ä –ø–æ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π —Ç–µ–º–∞—Ç–∏–∫–µ."},
            {"role": "user", "content": f"–ù–∞–ø–∏—à–∏ –∫–æ—Ä–æ—Ç–∫—É—é —Å—Ç–∞—Ç—å—é –Ω–∞ —Ç–µ–º—É: {title}. –ú–∞–∫—Å–∏–º—É–º 900 —Å–∏–º–≤–æ–ª–æ–≤. –ë–µ–∑ –ø–æ–≤—Ç–æ—Ä–æ–≤ –∏ –∫–ª–∏—à–µ."}
        ],
        "temperature": 0.7
    }

    try:
        response = requests.post(url, headers=headers, json=payload)
        response.raise_for_status()
        return response.json()["choices"][0]["message"]["content"]
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç—å–∏:", e)
        return "–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Å—Ç–∞—Ç—å—é üò¢"

async def post_to_telegram(title, text, image_url):
    try:
        if len(text) > 900:
            text = text[:900].rsplit('.', 1)[0] + "..."

        caption = f"<b>{title}</b>\n\n{text}"

        await bot.send_photo(
            chat_id=TG_CHANNEL,
            photo=image_url,
            caption=caption,
            parse_mode='HTML'
        )
        print(f"‚úÖ –ü–æ—Å—Ç –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω: {title}")
    except Exception as e:
        print("‚ùå –û—à–∏–±–∫–∞ Telegram:", e)

async def post_article():
    title = generate_title()
    image = random.choice(IMAGES)
    print(f"üìù –ì–µ–Ω–µ—Ä–∞—Ü–∏—è —Å—Ç–∞—Ç—å–∏: {title}")
    article = generate_article(title)
    await post_to_telegram(title, article, image)

async def main():
    await post_article()  # üî• –ü–µ—Ä–≤—ã–π –ø–æ—Å—Ç —Å—Ä–∞–∑—É
    while True:
        await asyncio.sleep(10 * 60)  # 10 –º–∏–Ω—É—Ç
        await post_article()

if __name__ == "__main__":
    asyncio.run(main())


